{
glyphname = AE;
kernRight = E;
layers = (
{
anchors = (
{
name = bottom;
pos = (-13,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,637,l),
(590,662,l),
(95,74,l),
(-50,1,l),
(-50,0,l),
(265,0,l),
(265,2,l),
(150,67,l)
);
},
{
closed = 1;
nodes = (
(587,258,l),
(262,258,l),
(248,226,l),
(602,226,l)
);
},
{
closed = 1;
nodes = (
(570,62,l),
(462,3,l),
(462,0,l),
(1042,0,l),
(1081,-31,l),
(1083,-31,l),
(1196,256,l),
(1194,256,l),
(994,31,l),
(653,31,l),
(653,341,l),
(911,341,l),
(991,222,l),
(993,222,l),
(993,492,l),
(991,492,l),
(911,373,l),
(653,373,l),
(653,670,l),
(992,670,l),
(1172,491,l),
(1174,493,l),
(1071,720,l),
(1069,720,l),
(1025,700,l),
(467,700,l),
(467,698,l),
(570,638,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
38 2 2 3 1 9 1 2 3 23 1 4 5 33 30 2 6 9 4 76 7 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 8 7 134 0 2 0 5 4 2 5 103 12 1 11 0 9 6 11 9 103 0 1 1 0 95 0 0 0 19 77 0 4 4 3 95 0 3 3 20 77 0 6 6 8 95 10 1 8 8 21 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 8 7 134 0 2 0 5 4 2 5 103 0 3 0 4 11 3 4 103 12 1 11 0 9 6 11 9 103 0 1 1 0 95 0 0 0 19 77 0 6 6 8 95 10 1 8 8 21 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
37 37 37 39 37 39 36 34 32 31 17 19 17 17 17 17 17 21 21 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1206;
},
{
layerId = "03DC8633-12B9-4C09-834B-15CC0827035A";
shapes = (
{
closed = 1;
nodes = (
(706,279,l),
(292,279,l),
(232,161,l),
(766,161,l)
);
},
{
closed = 1;
nodes = (
(689,0,l),
(689,0,l),
(689,700,l),
(594,700,l),
(0,0,l),
(197,0,l),
(689,578,l)
);
},
{
closed = 1;
nodes = (
(687,0,l),
(1387,0,l),
(1387,140,l),
(862,140,l),
(862,291,l),
(1250,291,l),
(1250,431,l),
(862,431,l),
(862,560,l),
(1379,560,l),
(1379,700,l),
(687,700,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 3 10 2 1 1 2 95 0 2 2 19 77 0 6 6 7 95 9 1 7 7 18 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 1 1 3 4 3 1 114 0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 0 3 3 2 95 0 2 2 19 77 0 6 6 7 95 9 1 7 7 18 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
10 1 1 3 4 3 1 114 0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 0 6 9 1 7 6 7 99 0 3 3 2 95 0 2 2 19 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 0 3 0 3 17 11 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1477;
},
{
associatedMasterId = "03DC8633-12B9-4C09-834B-15CC0827035A";
layerId = "CF4AAD94-A357-48E2-B32C-687C1FA4256A";
name = "21 feb 22, 14:43";
shapes = (
{
closed = 1;
nodes = (
(935,284,l),
(581,284,l),
(857,575,l),
(935,575,l),
(935,575,l)
);
},
{
closed = 1;
nodes = (
(310,0,l),
(458,156,l),
(935,156,l),
(935,0,l),
(1819,0,l),
(1819,150,l),
(1125,150,l),
(1125,320,l),
(1775,320,l),
(1775,449,l),
(1125,449,l),
(1125,585,l),
(1819,585,l),
(1819,734,l),
(775,734,l),
(75,0,l),
(75,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 3 10 2 1 1 2 95 0 2 2 19 77 0 6 6 7 95 9 1 7 7 18 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 1 1 3 4 3 1 114 0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 0 3 3 2 95 0 2 2 19 77 0 6 6 7 95 9 1 7 7 18 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
10 1 1 3 4 3 1 114 0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 0 6 9 1 7 6 7 99 0 3 3 2 95 0 2 2 19 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 0 3 0 3 17 11 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1894;
}
);
metricLeft = A;
metricRight = E;
note = AE;
unicode = 198;
}
