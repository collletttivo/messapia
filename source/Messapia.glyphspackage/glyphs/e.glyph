{
glyphname = e;
kernLeft = c;
kernRight = e;
layers = (
{
anchors = (
{
name = bottom;
pos = (346,0);
},
{
name = ogonek;
pos = (486,10);
},
{
name = top;
pos = (346,500);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,383,o),
(208,486,o),
(346,486,cs),
(469,486,o),
(549,395,o),
(549,284,c),
(123,284,l),
(124,255,l),
(637,255,l),
(637,412,o),
(520,514,o),
(346,514,cs),
(179,514,o),
(48,409,o),
(48,250,cs),
(48,101,o),
(169,-14,o),
(351,-14,cs),
(470,-14,o),
(570,36,o),
(622,115,c),
(602,130,l),
(555,63,o),
(477,27,o),
(382,27,cs),
(225,27,o),
(134,151,o),
(134,278,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
25 24 2 4 3 1 76 0 1 0 3 4 1 3 103 0 0 0 2 97 0 2 2 26 77 0 4 4 5 97 0 5 5 27 5 78 37 35 19 35 19 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 682;
},
{
anchors = (
{
name = bottom;
pos = (402,0);
},
{
name = ogonek;
pos = (615,10);
},
{
name = top;
pos = (402,500);
}
);
layerId = "03DC8633-12B9-4C09-834B-15CC0827035A";
shapes = (
{
closed = 1;
nodes = (
(202,245,cs),
(202,351,o),
(275,396,o),
(402,396,cs),
(532,396,o),
(584,349,o),
(596,287,c),
(156,287,l),
(156,200,l),
(758,200,l),
(758,240,ls),
(758,399,o),
(615,515,o),
(396,515,cs),
(173,515,o),
(43,399,o),
(43,241,cs),
(43,58,o),
(228,-15,o),
(431,-15,cs),
(531,-15,o),
(665,14,o),
(728,54,c),
(680,166,l),
(610,125,o),
(520,105,o),
(421,105,cs),
(297,105,o),
(202,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
19 1 4 3 20 1 5 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 4 1 3 103 0 0 0 2 97 0 2 2 26 77 0 4 4 5 97 0 5 5 27 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 0 1 2 0 105 0 1 0 3 4 1 3 103 0 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 0 1 2 0 105 0 1 0 3 4 1 3 103 0 4 5 5 4 89 0 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 33 20 35 17 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 798;
}
);
metricLeft = "=o";
metricRight = "=o-3";
note = e;
unicode = 101;
}
