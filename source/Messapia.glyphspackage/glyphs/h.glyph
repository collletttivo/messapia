{
glyphname = h;
kernLeft = h;
kernRight = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,689,l),
(141,65,l),
(29,2,l),
(29,0,l),
(332,0,l),
(332,2,l),
(221,65,l),
(221,299,ls),
(221,393,o),
(309,483,o),
(427,483,cs),
(531,483,o),
(608,415,o),
(608,274,cs),
(608,57,l),
(495,2,l),
(495,0,l),
(798,0,l),
(798,2,l),
(688,57,l),
(688,274,ls),
(688,430,o),
(582,514,o),
(447,514,cs),
(334,514,o),
(246,466,o),
(205,371,c),
(221,353,l),
(221,750,l),
(29,750,l),
(29,748,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
27 1 0 4 26 21 13 8 1 5 1 2 2 76 5 1 4 4 19 77 0 2 2 0 97 0 0 0 26 77 3 1 1 1 21 1 78 0 0 0 29 0 28 37 36 36 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 820;
},
{
layerId = "03DC8633-12B9-4C09-834B-15CC0827035A";
shapes = (
{
closed = 1;
nodes = (
(55,0,l),
(233,0,l),
(233,304,l),
(282,352,o),
(347,385,o),
(428,385,cs),
(535,385,o),
(600,324,o),
(600,206,cs),
(600,0,l),
(778,0,l),
(778,226,ls),
(778,418,o),
(672,515,o),
(499,515,cs),
(389,515,o),
(298,474,o),
(233,413,c),
(233,750,l),
(55,750,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 2 0 17 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 4 4 19 77 0 2 2 0 97 0 0 0 26 77 3 1 1 1 18 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 1 0 2 105 5 1 4 4 19 77 3 1 1 1 18 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 1 0 2 105 3 1 1 1 4 95 5 1 4 4 19 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 20 0 20 19 35 20 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 828;
},
{
associatedMasterId = m01;
layerId = "E5CB88D6-F33F-4AFF-8468-C6DAAAAB3199";
name = "11 feb 22, 17:26";
shapes = (
{
closed = 1;
nodes = (
(162,634,l),
(162,65,l),
(50,2,l),
(50,0,l),
(353,0,l),
(353,2,l),
(242,65,l),
(242,323,ls),
(242,416,o),
(332,488,o),
(457,488,cs),
(588,488,o),
(653,418,o),
(653,279,cs),
(653,57,l),
(540,2,l),
(540,0,l),
(843,0,l),
(843,2,l),
(733,57,l),
(733,279,ls),
(733,435,o),
(634,515,o),
(474,515,cs),
(357,515,o),
(266,470,o),
(229,396,c),
(242,373,l),
(242,700,l),
(50,700,l),
(50,699,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
27 1 0 4 26 21 13 8 1 5 1 2 2 76 5 1 4 4 19 77 0 2 2 0 97 0 0 0 26 77 3 1 1 1 21 1 78 0 0 0 29 0 28 37 36 36 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 888;
},
{
associatedMasterId = m01;
layerId = "6228ED2D-9E32-4252-88E6-C44356D9E87C";
name = "17 feb 22, 10:42";
shapes = (
{
closed = 1;
nodes = (
(137,653,l),
(137,65,l),
(25,2,l),
(25,0,l),
(328,0,l),
(328,2,l),
(217,65,l),
(217,304,ls),
(217,399,o),
(305,487,o),
(424,487,cs),
(551,487,o),
(628,417,o),
(628,274,cs),
(628,57,l),
(515,2,l),
(515,0,l),
(818,0,l),
(818,2,l),
(708,57,l),
(708,274,ls),
(708,430,o),
(602,514,o),
(446,514,cs),
(330,514,o),
(242,471,o),
(204,376,c),
(217,358,l),
(217,715,l),
(25,715,l),
(25,714,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
27 1 0 4 26 21 13 8 1 5 1 2 2 76 5 1 4 4 19 77 0 2 2 0 97 0 0 0 26 77 3 1 1 1 21 1 78 0 0 0 29 0 28 37 36 36 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 843;
},
{
associatedMasterId = "03DC8633-12B9-4C09-834B-15CC0827035A";
layerId = "C58C6781-5F08-4820-9FD6-D50B64C875B2";
name = "21 feb 22, 12:00";
shapes = (
{
closed = 1;
nodes = (
(70,0,l),
(248,0,l),
(248,339,l),
(297.333,375,o),
(362.333,390,o),
(453,390,cs),
(590.333,390,o),
(645,339,o),
(645,211,cs),
(645,0,l),
(823,0,l),
(823,211,ls),
(823,399.633,o),
(699.44,520,o),
(489,520,cs),
(391.667,520,o),
(310.667,487.667,o),
(248,441,c),
(248,730,l),
(70,730,l),
(70,730,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 2 0 17 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 4 4 19 77 0 2 2 0 97 0 0 0 26 77 3 1 1 1 18 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 1 0 2 105 5 1 4 4 19 77 3 1 1 1 18 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 1 0 2 105 3 1 1 1 4 95 5 1 4 4 19 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 20 0 20 19 35 20 35 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
metricLeft = "=n-5";
metricRight = n;
note = h;
unicode = 104;
}
